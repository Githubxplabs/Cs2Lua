require "cs2lua__utility";
require "cs2lua__namespaces";
require "cs2lua__externenums";
require "cs2lua__interfaces";

Mandelbrot = {
	__new_object = function(...)
		return newobject(Mandelbrot, nil, nil, ...);
	end,
	__define_class = function()
		local static = Mandelbrot;

		local static_methods = {
			cctor = function()
			end,
		};

		local static_fields_build = function()
			local static_fields = {
			};
			return static_fields;
		end;
		local static_props = nil;
		local static_events = nil;

		local instance_methods = {
			Start = function(this, obj, mb)
				this.root = newexternobject(UnityEngine.GameObject, "UnityEngine.GameObject", "ctor", nil, "mandelbrot");
				this:Exec();
			end,
			Call = function(this, name, ...)
				local args = wraparray{...};
			end,
			Exec = function(this)
				local width; width = 50;
				local height; height = width;
				local maxiter; maxiter = 50;
				local limit; limit = 4.00;
				local y; y = 0;
				while (y < height) do
					local Ci; Ci = (((2.00 * y) / height) - 1.00);
					local x; x = 0;
					while (x < width) do
						local Zr; Zr = 0.00;
						local Zi; Zi = 0.00;
						local Cr; Cr = (((2.00 * x) / width) - 1.50);
						local i; i = maxiter;
						local isInside; isInside = true;
						repeat
							local Tr; Tr = (((Zr * Zr) - (Zi * Zi)) + Cr);
							Zi = (((2.00 * Zr) * Zi) + Ci);
							Zr = Tr;
							if (((Zr * Zr) + (Zi * Zi)) > limit) then
								isInside = false;
								break;
							end;
						until not (((function() i = invokeintegeroperator(3, "-", i, 1, System.Int32, System.Int32); return i; end)() > 0));
						if isInside then
							this:DrawCube(x, y, width, height);
						end;
					x = invokeintegeroperator(2, "+", x, 1, System.Int32, System.Int32);
					end;
				y = invokeintegeroperator(2, "+", y, 1, System.Int32, System.Int32);
				end;
			end,
			DrawCube = function(this, x, y, w, h)
				local cube; cube = UnityEngine.GameObject.CreatePrimitive(3);
				cube.transform.position = newexternobject(UnityEngine.Vector3, "UnityEngine.Vector3", "ctor", nil, (((x * this.r) * this.scale) / w), ((((y * this.r) * this.scale) / h) - 12), 0);
				cube.transform:SetParent(this.root.transform);
				local mat; mat = cube:GetComponent(UnityEngine.Renderer).material;
				local ix; ix = UnityEngine.Random.Range(0, this.colors.Length);
				mat.color = this.colors[ix + 1];
			end,
			ctor = function(this)
			end,
		};

		local instance_fields_build = function()
			local instance_fields = {
				root = __cs2lua_nil_field_value,
				colors = wraparray{UnityEngine.Color.red, UnityEngine.Color.blue, UnityEngine.Color.green, UnityEngine.Color.cyan, UnityEngine.Color.grey, UnityEngine.Color.white, UnityEngine.Color.yellow, UnityEngine.Color.magenta, UnityEngine.Color.black},
				r = 10,
				scale = 3.00,
			};
			return instance_fields;
		end;
		local instance_props = nil;
		local instance_events = nil;
		local interfaces = {
			"IStartupPlugin",
		};

		local interface_map = {
			IStartupPlugin_Start = "Start",
			IStartupPlugin_Call = "Call",
		};


		return defineclass(nil, "Mandelbrot", static, static_methods, static_fields_build, static_props, static_events, instance_methods, instance_fields_build, instance_props, instance_events, interfaces, interface_map, false);
	end,
};
--Mandelbrot.Exec();



Mandelbrot.__define_class();
